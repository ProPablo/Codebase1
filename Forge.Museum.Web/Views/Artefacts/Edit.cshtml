@model Forge.Museum.Interfaces.DataTransferObjects.Artefact.ArtefactDto
<link href="~/Content/reset.css" rel="stylesheet" type="text/css" />
<link href="~/Content/Index.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Edit";

    var categoryDropdown = new List<SelectListItem>();

    if (ViewBag.CategoryList != null)
    {
        categoryDropdown = ViewBag.CategoryList;
    }

    var zoneDropdown = new List<SelectListItem>();
    if (ViewBag.ZoneList != null)
    {
        zoneDropdown = ViewBag.ZoneList;
    }

    var beaconDropdown = new List<SelectListItem>();
    if (ViewBag.BeaconList != null)
    {   
        beaconDropdown = ViewBag.BeaconList;
    }

    string NameValidation;
    if (ViewBag.ValidationName != null)
    {
        NameValidation = ViewBag.ValidationName;
    }
    else
    {
        NameValidation = "";
    }
}

<h2>Edit</h2>
@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Artefact #@Model.Id - @Model.Name</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Image)
    @Html.HiddenFor(model => model.AcquisitionDate)



    <div class="form-group">
        @Html.LabelFor(model => model.Name, "Artefact Name:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, NameValidation, new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, "Description:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Radius_Of_Effect, "Radius of Effect:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Radius_Of_Effect, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Radius_Of_Effect, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Coord_X, "X Coordinate:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Coord_X, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Coord_X, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Coord_Y, "Y Coordinate:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Coord_Y, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Coord_Y, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Activation, "Activation Status:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Activation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Activation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AdditionalComments, "Additional Comments:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.AdditionalComments, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AdditionalComments, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ArtefactCategory, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.ArtefactCategory.Id, categoryDropdown, new { htmlAttributes = new { @class = "form-control" } })
            @*          @Html.ValidationMessageFor(model => model.ArtefactCategory, "", new { @class = "text-danger" })
            *@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Zone, "Zone", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.Zone.Id, zoneDropdown, "Select Zone", new { htmlAttributes = new { @class = "form-control" } })
            @*          @Html.ValidationMessageFor(model => model.ArtefactCategory, "", new { @class = "text-danger" })
            *@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Beacon, "Beacon", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.Beacon.Id, beaconDropdown, new { htmlAttributes = new { @class = "form-control" } })
            @*          @Html.ValidationMessageFor(model => model.ArtefactCategory, "", new { @class = "text-danger" })
            *@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="ImageFile" />
            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
